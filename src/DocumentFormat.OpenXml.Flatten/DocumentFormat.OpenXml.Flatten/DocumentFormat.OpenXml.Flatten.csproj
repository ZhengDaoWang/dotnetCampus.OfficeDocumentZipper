<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net45;netstandard2.0;netcoreapp3.1;net6.0</TargetFrameworks>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <GenerateDocumentationFile>true</GenerateDocumentationFile>

    <Nullable>enable</Nullable>
  </PropertyGroup>

  <!-- 在 GitHub 的 Action 构建会添加 GITHUB_ACTIONS 变量 -->
  <!-- 下面进行自动构建，自动添加源代码链接等 -->
  <!-- 详细请看 https://github.com/dotnet/sourcelink -->
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>

    <!-- Optional: Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <!-- 只有在 GitHub 的 Action 构建才能使用源代码链接 -->
    <!-- 源代码链接需要使用 commit 号，而在 GitHub 的 Action 构建的 commit 才是对的 -->
    <!-- 本地构建，也许没有记得 commit 就构建，此时的 nuget 包的源代码是不对的，上传上去会让调试诡异 -->
    <!-- Optional: Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- 本地等不需要创建符号文件 -->
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <!-- 链接源代码到 GitHub 仓库，方便调试 -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DocumentFormat.OpenXml" Version="2.15.0" />

    <PackageReference Include="dotnetCampus.OpenXmlUnitConverter" Version="2.2.0-alpha01" />
    <!-- 源代码包项目里面依然可以用dotnetCampus.OpenXmlUnitConverter.Source源代码包，因此不加上引用 -->
    <SourceYardExcludePackageReference Include="dotnetCampus.OpenXmlUnitConverter" />

    <PackageReference Include="dotnetCampus.SourceYard" Version="0.1.19371-alpha" Condition="'$(TargetFramework)'=='net45'">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>

    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net45'">
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Core" />
    <Reference Include="System.IO.Compression" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
</Project>
